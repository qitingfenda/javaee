虚拟机栈出现的背景
由于跨平台性的设计，Java的指令都是根据栈来设计的。不同平台CPU架构不同，所以不能设计为基于寄存器的。
优点是跨平台，指令集小，编译器更容易实现，缺点是性能下降，实现同样的功能需要更多的指令。

初步印象
有不少Java开发人员一提到Java内存结构，就会非常粗粒度地将JVM中的内存区理解为仅有Java堆(heep)和Java栈(stack)

内存中的堆与栈
栈是运行时的单位，而堆是存储的单位。
即：栈解决程序的运行问题，即程序如何执行，或者说如何处理数据。堆解决的是数据存储的问题，即数据怎么放，放在哪儿。

Java虚拟机栈是什么？
Java虚拟机栈(Java Virtual Machine Stack)，早期也叫Java栈。每个线程在创建时都会创建一个虚拟机栈，
其内部保存一个个的栈帧(Stack Frame)，对应着一次次的java方法调用。

生命周期：生命周期和线程一致。

作用：主管Java程序的运行，它保存方法的局部变量、部分结果，并参与方法的调用和返回。

栈的特点：
 - 栈是一种快速有效的分配存储方法，访问速度仅次于程序计数器。
 - JVM直接对Java栈的操作只有两个
    - 每个方法执行，伴随着入栈
    - 每个方法结束后的出栈工作
 - 对于栈来说不存在垃圾回收问题




































